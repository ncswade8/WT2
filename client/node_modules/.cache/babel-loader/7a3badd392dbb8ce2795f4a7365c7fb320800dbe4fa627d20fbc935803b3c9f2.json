{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wmacneil\\\\Documents\\\\CursorAIProjects\\\\WT2\\\\client\\\\src\\\\components\\\\WaterQualityForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { Droplets, Save, ArrowLeft } from 'lucide-react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WaterQualityForm = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [isLoadingUsers, setIsLoadingUsers] = useState(true);\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm();\n\n  // Fetch users on component mount\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('/api/users');\n        if (response.data.success) {\n          setUsers(response.data.users);\n        }\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        toast.error('Failed to load users. Please try again.');\n      } finally {\n        setIsLoadingUsers(false);\n      }\n    };\n    fetchUsers();\n  }, []);\n  const onSubmit = async data => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post('/api/water-quality', data);\n      if (response.data.success) {\n        toast.success('Water quality record created successfully!');\n        navigate('/water-quality');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('Water quality creation error:', error);\n      if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) {\n        toast.error(error.response.data.message);\n      } else if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.errors) {\n        const errorMessages = error.response.data.errors.map(err => err.msg).join(', ');\n        toast.error(errorMessages);\n      } else {\n        toast.error('Failed to create water quality record. Please try again.');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getCurrentTime = () => {\n    const now = new Date();\n    return now.toTimeString().slice(0, 5); // HH:MM format\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"Add Water Quality Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"page-subtitle\",\n      children: \"Record water quality measurements and observations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/water-quality'),\n            className: \"btn btn-secondary\",\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px',\n              marginRight: '1rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), \"Back\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"form-title\",\n            style: {\n              margin: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Droplets, {\n              size: 24,\n              style: {\n                marginRight: '8px',\n                verticalAlign: 'middle'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), \"New Water Quality Record\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\n              gap: '1.5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                className: `form-input ${errors.time ? 'error' : ''}`,\n                defaultValue: getCurrentTime(),\n                ...register('time', {\n                  required: 'Time is required'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), errors.time && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.time.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Tester Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: `form-input ${errors.tester ? 'error' : ''}`,\n                ...register('tester', {\n                  required: 'Please select a tester'\n                }),\n                disabled: isLoadingUsers,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a tester...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: `${user.firstName} ${user.lastName}`,\n                  children: [user.firstName, \" \", user.lastName]\n                }, user._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), errors.tester && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.tester.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), isLoadingUsers && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '14px',\n                  color: '#666',\n                  marginTop: '4px'\n                },\n                children: \"Loading users...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: `form-input ${errors.location ? 'error' : ''}`,\n                placeholder: \"Enter testing location\",\n                ...register('location', {\n                  required: 'Location is required',\n                  minLength: {\n                    value: 2,\n                    message: 'Location must be at least 2 characters'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), errors.location && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.location.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Temperature (\\xB0C)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.1\",\n                className: `form-input ${errors.temperature ? 'error' : ''}`,\n                placeholder: \"Enter temperature\",\n                ...register('temperature', {\n                  required: 'Temperature is required',\n                  min: {\n                    value: -50,\n                    message: 'Temperature must be at least -50°C'\n                  },\n                  max: {\n                    value: 100,\n                    message: 'Temperature must be at most 100°C'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), errors.temperature && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.temperature.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Turbidity (NTU)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.1\",\n                className: `form-input ${errors.turbidity ? 'error' : ''}`,\n                placeholder: \"Enter turbidity\",\n                ...register('turbidity', {\n                  required: 'Turbidity is required',\n                  min: {\n                    value: 0,\n                    message: 'Turbidity must be at least 0 NTU'\n                  },\n                  max: {\n                    value: 1000,\n                    message: 'Turbidity must be at most 1000 NTU'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), errors.turbidity && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.turbidity.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Dissolved Oxygen (mg/L)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.1\",\n                className: `form-input ${errors.dissolvedOxygen ? 'error' : ''}`,\n                placeholder: \"Enter dissolved oxygen\",\n                ...register('dissolvedOxygen', {\n                  required: 'Dissolved oxygen is required',\n                  min: {\n                    value: 0,\n                    message: 'Dissolved oxygen must be at least 0 mg/L'\n                  },\n                  max: {\n                    value: 20,\n                    message: 'Dissolved oxygen must be at most 20 mg/L'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), errors.dissolvedOxygen && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.dissolvedOxygen.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"pH\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.1\",\n                className: `form-input ${errors.ph ? 'error' : ''}`,\n                placeholder: \"Enter pH value\",\n                ...register('ph', {\n                  required: 'pH is required',\n                  min: {\n                    value: 0,\n                    message: 'pH must be at least 0'\n                  },\n                  max: {\n                    value: 14,\n                    message: 'pH must be at most 14'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), errors.ph && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.ph.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Fecal Coliform (CFU/100mL)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"1\",\n                className: `form-input ${errors.fecalColiform ? 'error' : ''}`,\n                placeholder: \"Enter fecal coliform count\",\n                ...register('fecalColiform', {\n                  required: 'Fecal coliform is required',\n                  min: {\n                    value: 0,\n                    message: 'Fecal coliform must be at least 0'\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), errors.fecalColiform && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.fecalColiform.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Weather Conditions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-input\",\n                placeholder: \"e.g., Sunny, Cloudy, Rainy\",\n                ...register('weather')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Site Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-input\",\n              rows: \"3\",\n              placeholder: \"Enter any observations or notes about the testing site...\",\n              ...register('siteNotes'),\n              style: {\n                resize: 'vertical'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Additional Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-input\",\n              rows: \"3\",\n              placeholder: \"Enter any additional notes or comments...\",\n              ...register('additionalNotes'),\n              style: {\n                resize: 'vertical'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '1rem',\n              marginTop: '2rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: isLoading,\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: '8px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Save, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this), isLoading ? 'Creating Record...' : 'Save Record']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => navigate('/water-quality'),\n              className: \"btn btn-secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(WaterQualityForm, \"OC1noOcrjsZK35dyFG3aD69yj4I=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = WaterQualityForm;\nexport default WaterQualityForm;\nvar _c;\n$RefreshReg$(_c, \"WaterQualityForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useForm","Droplets","Save","ArrowLeft","axios","toast","jsxDEV","_jsxDEV","WaterQualityForm","_s","isLoading","setIsLoading","users","setUsers","isLoadingUsers","setIsLoadingUsers","navigate","register","handleSubmit","formState","errors","watch","fetchUsers","response","get","data","success","error","console","onSubmit","post","_error$response","_error$response$data","_error$response2","_error$response2$data","message","errorMessages","map","err","msg","join","getCurrentTime","now","Date","toTimeString","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","alignItems","marginBottom","onClick","gap","marginRight","size","margin","verticalAlign","gridTemplateColumns","type","time","defaultValue","required","tester","disabled","value","user","firstName","lastName","_id","fontSize","color","marginTop","location","placeholder","minLength","step","temperature","min","max","turbidity","dissolvedOxygen","ph","fecalColiform","rows","resize","_c","$RefreshReg$"],"sources":["C:/Users/wmacneil/Documents/CursorAIProjects/WT2/client/src/components/WaterQualityForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Droplets, Save, ArrowLeft } from 'lucide-react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst WaterQualityForm = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoadingUsers, setIsLoadingUsers] = useState(true);\r\n  const navigate = useNavigate();\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch\r\n  } = useForm();\r\n\r\n  // Fetch users on component mount\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get('/api/users');\r\n        if (response.data.success) {\r\n          setUsers(response.data.users);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n        toast.error('Failed to load users. Please try again.');\r\n      } finally {\r\n        setIsLoadingUsers(false);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const onSubmit = async (data) => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const response = await axios.post('/api/water-quality', data);\r\n      \r\n      if (response.data.success) {\r\n        toast.success('Water quality record created successfully!');\r\n        navigate('/water-quality');\r\n      }\r\n    } catch (error) {\r\n      console.error('Water quality creation error:', error);\r\n      \r\n      if (error.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else if (error.response?.data?.errors) {\r\n        const errorMessages = error.response.data.errors.map(err => err.msg).join(', ');\r\n        toast.error(errorMessages);\r\n      } else {\r\n        toast.error('Failed to create water quality record. Please try again.');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCurrentTime = () => {\r\n    const now = new Date();\r\n    return now.toTimeString().slice(0, 5); // HH:MM format\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"page-title\">Add Water Quality Record</h1>\r\n      <p className=\"page-subtitle\">\r\n        Record water quality measurements and observations\r\n      </p>\r\n      \r\n      <div className=\"form-container\">\r\n        <div className=\"card\">\r\n          <div style={{ display: 'flex', alignItems: 'center', marginBottom: '2rem' }}>\r\n            <button\r\n              onClick={() => navigate('/water-quality')}\r\n              className=\"btn btn-secondary\"\r\n              style={{ display: 'flex', alignItems: 'center', gap: '8px', marginRight: '1rem' }}\r\n            >\r\n              <ArrowLeft size={16} />\r\n              Back\r\n            </button>\r\n            <h2 className=\"form-title\" style={{ margin: 0 }}>\r\n              <Droplets size={24} style={{ marginRight: '8px', verticalAlign: 'middle' }} />\r\n              New Water Quality Record\r\n            </h2>\r\n          </div>\r\n          \r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '1.5rem' }}>\r\n              {/* Time */}\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Time</label>\r\n                <input\r\n                  type=\"time\"\r\n                  className={`form-input ${errors.time ? 'error' : ''}`}\r\n                  defaultValue={getCurrentTime()}\r\n                  {...register('time', { \r\n                    required: 'Time is required'\r\n                  })}\r\n                />\r\n                {errors.time && (\r\n                  <div className=\"error\">{errors.time.message}</div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Tester - Dropdown */}\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Tester Name</label>\r\n                <select\r\n                  className={`form-input ${errors.tester ? 'error' : ''}`}\r\n                  {...register('tester', { \r\n                    required: 'Please select a tester'\r\n                  })}\r\n                  disabled={isLoadingUsers}\r\n                >\r\n                  <option value=\"\">Select a tester...</option>\r\n                  {users.map(user => (\r\n                    <option key={user._id} value={`${user.firstName} ${user.lastName}`}>\r\n                      {user.firstName} {user.lastName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                {errors.tester && (\r\n                  <div className=\"error\">{errors.tester.message}</div>\r\n                )}\r\n                {isLoadingUsers && (\r\n                  <div style={{ fontSize: '14px', color: '#666', marginTop: '4px' }}>\r\n                    Loading users...\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Location */}\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Location</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={`form-input ${errors.location ? 'error' : ''}`}\r\n                  placeholder=\"Enter testing location\"\r\n                  {...register('location', { \r\n                    required: 'Location is required',\r\n                    minLength: { value: 2, message: 'Location must be at least 2 characters' }\r\n                  })}\r\n                />\r\n                {errors.location && (\r\n                  <div className=\"error\">{errors.location.message}</div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Temperature */}\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Temperature (°C)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  className={`form-input ${errors.temperature ? 'error' : ''}`}\r\n                  placeholder=\"Enter temperature\"\r\n                  {...register('temperature', { \r\n                    required: 'Temperature is required',\r\n                    min: { value: -50, message: 'Temperature must be at least -50°C' },\r\n                    max: { value: 100, message: 'Temperature must be at most 100°C' }\r\n                  })}\r\n                />\r\n                {errors.temperature && (\r\n                  <div className=\"error\">{errors.temperature.message}</div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Turbidity */}\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Turbidity (NTU)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  className={`form-input ${errors.turbidity ? 'error' : ''}`}\r\n                  placeholder=\"Enter turbidity\"\r\n                  {...register('turbidity', { \r\n                    required: 'Turbidity is required',\r\n                    min: { value: 0, message: 'Turbidity must be at least 0 NTU' },\r\n                    max: { value: 1000, message: 'Turbidity must be at most 1000 NTU' }\r\n                  })}\r\n                />\r\n                {errors.turbidity && (\r\n                  <div className=\"error\">{errors.turbidity.message}</div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Dissolved Oxygen */}\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Dissolved Oxygen (mg/L)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  className={`form-input ${errors.dissolvedOxygen ? 'error' : ''}`}\r\n                  placeholder=\"Enter dissolved oxygen\"\r\n                  {...register('dissolvedOxygen', { \r\n                    required: 'Dissolved oxygen is required',\r\n                    min: { value: 0, message: 'Dissolved oxygen must be at least 0 mg/L' },\r\n                    max: { value: 20, message: 'Dissolved oxygen must be at most 20 mg/L' }\r\n                  })}\r\n                />\r\n                {errors.dissolvedOxygen && (\r\n                  <div className=\"error\">{errors.dissolvedOxygen.message}</div>\r\n                )}\r\n              </div>\r\n\r\n              {/* pH */}\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">pH</label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  className={`form-input ${errors.ph ? 'error' : ''}`}\r\n                  placeholder=\"Enter pH value\"\r\n                  {...register('ph', { \r\n                    required: 'pH is required',\r\n                    min: { value: 0, message: 'pH must be at least 0' },\r\n                    max: { value: 14, message: 'pH must be at most 14' }\r\n                  })}\r\n                />\r\n                {errors.ph && (\r\n                  <div className=\"error\">{errors.ph.message}</div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Fecal Coliform */}\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Fecal Coliform (CFU/100mL)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  className={`form-input ${errors.fecalColiform ? 'error' : ''}`}\r\n                  placeholder=\"Enter fecal coliform count\"\r\n                  {...register('fecalColiform', { \r\n                    required: 'Fecal coliform is required',\r\n                    min: { value: 0, message: 'Fecal coliform must be at least 0' }\r\n                  })}\r\n                />\r\n                {errors.fecalColiform && (\r\n                  <div className=\"error\">{errors.fecalColiform.message}</div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Weather */}\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Weather Conditions</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-input\"\r\n                  placeholder=\"e.g., Sunny, Cloudy, Rainy\"\r\n                  {...register('weather')}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Notes - Full Width */}\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Site Notes</label>\r\n              <textarea\r\n                className=\"form-input\"\r\n                rows=\"3\"\r\n                placeholder=\"Enter any observations or notes about the testing site...\"\r\n                {...register('siteNotes')}\r\n                style={{ resize: 'vertical' }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Additional Notes</label>\r\n              <textarea\r\n                className=\"form-input\"\r\n                rows=\"3\"\r\n                placeholder=\"Enter any additional notes or comments...\"\r\n                {...register('additionalNotes')}\r\n                style={{ resize: 'vertical' }}\r\n              />\r\n            </div>\r\n\r\n            <div style={{ display: 'flex', gap: '1rem', marginTop: '2rem' }}>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                disabled={isLoading}\r\n                style={{ display: 'flex', alignItems: 'center', gap: '8px' }}\r\n              >\r\n                <Save size={16} />\r\n                {isLoading ? 'Creating Record...' : 'Save Record'}\r\n              </button>\r\n              \r\n              <button\r\n                type=\"button\"\r\n                onClick={() => navigate('/water-quality')}\r\n                className=\"btn btn-secondary\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WaterQualityForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}