{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wmacneil\\\\Documents\\\\CursorAIProjects\\\\WT2\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Set the token in axios headers\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Verify token is valid by making a request to get user info\n      const verifyToken = async () => {\n        try {\n          const response = await axios.get('/api/auth/me');\n          if (response.data.success) {\n            setUser(response.data.user);\n            setIsAuthenticated(true);\n          } else {\n            // Token is invalid, remove it\n            localStorage.removeItem('token');\n            delete axios.defaults.headers.common['Authorization'];\n          }\n        } catch (error) {\n          // Token is invalid, remove it\n          localStorage.removeItem('token');\n          delete axios.defaults.headers.common['Authorization'];\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      verifyToken();\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Store token in localStorage\n        localStorage.setItem('token', token);\n\n        // Set token in axios headers\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        setUser(user);\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post('/api/auth/register', userData);\n      if (response.data.success) {\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Store token in localStorage\n        localStorage.setItem('token', token);\n\n        // Set token in axios headers\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        setUser(user);\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed. Please try again.'\n      };\n    }\n  };\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n\n    // Remove token from axios headers\n    delete axios.defaults.headers.common['Authorization'];\n\n    // Clear user state\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    isLoading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"BKa16Kz0rM4B0y8AT6EXjU1HOY4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","defaults","headers","common","verifyToken","response","get","data","success","removeItem","error","login","email","password","post","setItem","message","_error$response","_error$response$data","console","register","userData","_error$response2","_error$response2$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/wmacneil/Documents/CursorAIProjects/WT2/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // Set the token in axios headers\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Verify token is valid by making a request to get user info\r\n      const verifyToken = async () => {\r\n        try {\r\n          const response = await axios.get('/api/auth/me');\r\n          if (response.data.success) {\r\n            setUser(response.data.user);\r\n            setIsAuthenticated(true);\r\n          } else {\r\n            // Token is invalid, remove it\r\n            localStorage.removeItem('token');\r\n            delete axios.defaults.headers.common['Authorization'];\r\n          }\r\n        } catch (error) {\r\n          // Token is invalid, remove it\r\n          localStorage.removeItem('token');\r\n          delete axios.defaults.headers.common['Authorization'];\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      };\r\n      \r\n      verifyToken();\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      \r\n      if (response.data.success) {\r\n        const { token, user } = response.data;\r\n        \r\n        // Store token in localStorage\r\n        localStorage.setItem('token', token);\r\n        \r\n        // Set token in axios headers\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        \r\n        setUser(user);\r\n        setIsAuthenticated(true);\r\n        \r\n        return { success: true };\r\n      } else {\r\n        return { success: false, message: response.data.message };\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Login failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/register', userData);\r\n      \r\n      if (response.data.success) {\r\n        const { token, user } = response.data;\r\n        \r\n        // Store token in localStorage\r\n        localStorage.setItem('token', token);\r\n        \r\n        // Set token in axios headers\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        \r\n        setUser(user);\r\n        setIsAuthenticated(true);\r\n        \r\n        return { success: true };\r\n      } else {\r\n        return { success: false, message: response.data.message };\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Registration failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem('token');\r\n    \r\n    // Remove token from axios headers\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    \r\n    // Clear user state\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    isLoading,\r\n    login,\r\n    register,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}